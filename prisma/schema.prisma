// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String?
  role      Role      @default(USER)
  websites  Website[]
  alerts    Alert[]
  reports   Report[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Website {
  id          Int       @id @default(autoincrement())
  name        String
  url         String    @unique
  ownerId     Int
  owner       User      @relation(fields: [ownerId], references: [id])
  status      String
  ttfb        Float?
  sslInfo     Json?
  error       String?
  metrics     Metric[]
  reports     Report[]
  alerts      Alert[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Metric {
  id          Int       @id @default(autoincrement())
  websiteId   Int
  website     Website   @relation(fields: [websiteId], references: [id])
  responseTime Float
  uptime      Float
  errorRate   Float
  recordedAt  DateTime  @default(now())
}

model Alert {
  id          Int       @id @default(autoincrement())
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  websiteId   Int
  website     Website   @relation(fields: [websiteId], references: [id])
  type        AlertType
  message     String
  createdAt   DateTime  @default(now())
}

model Report {
  id          Int       @id @default(autoincrement())
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  websiteId   Int
  website     Website   @relation(fields: [websiteId], references: [id])
  reportType  ReportType
  content     String
  generatedAt DateTime  @default(now())
}

enum Role {
  ADMIN
  USER
}

enum AlertType {
  DOWNTIME
  PERFORMANCE
  ERROR
}

enum ReportType {
  DAILY
  WEEKLY
  MONTHLY
}
